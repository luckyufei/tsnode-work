declare var protocols: any;
declare var RULE_RE: RegExp;
declare var PROXY_RE: RegExp;
declare var pureResProtocols: string[];
declare var resProtocols: string[];
declare var binProtocols: string[];
declare var jsProtocols: string[];
declare var cssProtocols: string[];
declare var aliasProtocols: {
    ruleFile: string;
    ruleScript: string;
    rulesScript: string;
    reqScript: string;
    reqRules: string;
    resRules: string;
    pathReplace: string;
    download: string;
    skip: string;
    'http-proxy': string;
    'xhttp-proxy': string;
    status: string;
    hosts: string;
    xhost: string;
    html: string;
    js: string;
    reqMerge: string;
    css: string;
    excludeFilter: string;
    includeFilter: string;
    P: string;
};
declare var reqProtocols: any;
declare var RULE_PROTO_RE: RegExp;
declare function isBinProtocol(protocol: any): 1 | 2 | 3 | undefined;
declare function resetRules(rules: any): any;
declare function isResRule(protocol: any): boolean;
declare function isWebProtocol(protocol: any): boolean;
declare function isWebsocketProtocol(protocol: any): boolean;
declare function isFileProxy(protocol: any): boolean;
declare function contains(name: any): boolean;
