declare var forge: any;
declare var fs: any;
declare var net: any;
declare var path: any;
declare var crypto: Crypto;
declare var LRU: any;
declare var hagent: any;
declare var extend: any;
declare var h2: any;
declare var createSecureContext: any;
declare var util: any;
declare var config: any;
declare var pki: any;
declare var workerIndex: any;
declare var CUR_VERSION: string;
declare var requiredVersion: boolean;
declare var HTTPS_DIR: any;
declare var ROOT_NEW_KEY_FILE: any;
declare var ROOT_NEW_CRT_FILE: any;
declare var CUSTOM_CERTS_DIR: any;
declare var useNewKey: any;
declare var ROOT_KEY_FILE: any;
declare var ROOT_CRT_FILE: any;
declare var customCertDir: any;
declare var customPairs: {};
declare var customCertsInfo: {};
declare var customCertsFiles: {};
declare var allCustomCerts: {};
declare var customCertCount: number;
declare var cachePairs: any;
declare var certsCache: any;
declare var remoteCerts: any;
declare var ILEGAL_CHAR_RE: RegExp;
declare var RANDOM_SERIAL: string;
declare var CLEAR_CERTS_INTERVAL: number;
declare var MAX_INNTERFAL: number;
declare var PORT_RE: RegExp;
declare var customRoot: any;
declare var ROOT_KEY: any, ROOT_CRT: any;
declare var rootKey: any, rootCrt: any;
declare var intervalCount: number;
declare var timer: number;
declare function mkdir(path: any): any;
declare function checkCertificate(): boolean;
declare function getCommonName(crt: any): any;
declare function getDomain(hostname: any): any;
declare function getCacheCert(hostname: any): any;
declare var curIndex: number;
declare function createSelfCert(hostname: any): {
    key: any;
    cert: any;
};
declare function parseCert(cert: any): {
    cert: any;
    altNames: any;
    validity: any;
} | undefined;
declare function parseAllCustomCerts(): void;
declare function loadCustomCerts(certDir: any, isCustom: any): void;
declare function getAltNames(exts: any): any;
declare function createRootCA(): void;
declare function getRandom(): string;
declare function createCACert(opts: any): {
    key: any;
    cert: any;
};
declare function createCert(publicKey: any, serialNumber: any, isShortPeriod: any): any;
declare function getRootCAFile(): any;
declare function getOrCreateCert(servername: any): any;
declare var getHttp2Server: any;
declare var getHttpsServer: any;
declare var cbs: {};
declare var ports: {};
declare var TIMEOUT: number;
declare var SNICallback: (servername: any, cb: any) => void;
declare function addCallback(name: any, callback: any): any;
declare function createServer(name: any, cbList: any, listener: any, options: any): void;
declare var checkTimer: any;
declare function checkExpired(): void;
declare function removeFile(filename: any): void;
declare function writeFile(filename: any, ctn: any, callback: any): void;
declare function removeCertFile(filename: any): void;
declare function writeCertFile(filename: any, cert: any, mtime: any): void;
declare var ILLEGAL_PATH_RE: RegExp;
